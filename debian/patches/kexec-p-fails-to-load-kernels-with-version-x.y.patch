Description: kexec -p fails on kernel versions of form x.y
 "kexec -p" fails to load kernels with version of the form x.y instead of
 x.y.z with an error message similar to "Unsupported utsname.release:
 3.10-1-amd64". Code in kernel_version() also checks the wrong variable
 name for error return value from strtoul() for "minor" and "patch" and
 hence possibly missing a real error.

 This patch fix both of these problems.

Author: Khalid Aziz <khalid@debian.org>
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=708034
Forwarded: http://lists.infradead.org/pipermail/kexec/2013-July/009355.html
Applied-Upstream: commit: 5f32e0d2d693f46825345f589ee11fa439a4ca12
Last-Update: 2013-07-26
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/kexec/kernel_version.c
+++ b/kexec/kernel_version.c
@@ -31,21 +31,20 @@ long kernel_version(void)
 	}
 
 	minor = strtoul(p, &p, 10);
-	if (major == ULONG_MAX) {
+	if (minor == ULONG_MAX) {
 		fprintf(stderr, "strtoul failed: %s\n", strerror(errno));
 		return -1;
 	}
 
-	if (*p++ != '.') {
-		fprintf(stderr, "Unsupported utsname.release: %s\n",
-			utsname.release);
-		return -1;
-	}
-
-	patch = strtoul(p, &p, 10);
-	if (major == ULONG_MAX) {
-		fprintf(stderr, "strtoul failed: %s\n", strerror(errno));
-		return -1;
+	/* There may or may not be a patch level for this kernel */
+	if (*p++ == '.') {
+		patch = strtoul(p, &p, 10);
+		if (patch == ULONG_MAX) {
+			fprintf(stderr, "strtoul failed: %s\n",strerror(errno));
+			return -1;
+		}
+	} else {
+		patch = 0;
 	}
 
 	if (major >= 256 || minor >= 256 || patch >= 256) {
